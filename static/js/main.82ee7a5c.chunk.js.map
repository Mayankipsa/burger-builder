{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Auxillary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","auxillary","props","children","layout","Auxillary","className","styles","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","console","log","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","ctrl","ingredientRemoved","ingredientAdded","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","priceDeduction","disabledInfo","key","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82ee7a5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1cIPj\",\"BreadTop\":\"BurgerIngredient_BreadTop__27NOV\",\"Seeds1\":\"BurgerIngredient_Seeds1__3FD3k\",\"Seeds2\":\"BurgerIngredient_Seeds2__2uqmR\",\"Meat\":\"BurgerIngredient_Meat__2x4P-\",\"Cheese\":\"BurgerIngredient_Cheese__syvPQ\",\"Salad\":\"BurgerIngredient_Salad__1Mqiw\",\"Bacon\":\"BurgerIngredient_Bacon__39sQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__Btvqk\",\"Label\":\"BuildControl_Label__KxCq6\",\"Less\":\"BuildControl_Less__1LtLZ\",\"More\":\"BuildControl_More__YMw86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__dJYR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__k81JW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__umpRG\"};","const auxillary = (props) => props.children;\r\nexport default auxillary;","import React from 'react';\r\nimport Auxillary from '../../hoc/Auxillary';\r\nimport styles from './Layout.module.css';\r\n\r\nconst layout = (props) => (\r\n    <Auxillary>\r\n        <div>Toolbar, SideDrawer, BackDrop</div>\r\n        <main className={styles.Content}>{props.children}</main>\r\n    </Auxillary>\r\n);\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport styles from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={styles.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={styles.BreadTop}>\r\n                        <div className={styles.Seeds1}></div>\r\n                        <div className={styles.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={styles.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={styles.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={styles.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={styles.Salad}></div>;\r\n                break;\r\n\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport styles from './Burger.module.css';\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return < BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []); //Flattening of Array:: check out JS docs\r\n\r\n    console.log(transformedIngredients);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding Ingredients.</p>;\r\n    }\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from \"react\";\r\nimport styles from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={styles.BuildControl}>\r\n        <div className={styles.Label}>{props.label}</div>\r\n        <button className={styles.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button className={styles.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from \"react\";\r\nimport styles from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={styles.BuildControls}>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport Auxillary from '../../hoc/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    //     constructor(props) {\r\n    // super(props);\r\n    // this.state={...}\r\n    //     }\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4\r\n    };\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        });\r\n    };\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0) {\r\n            return;\r\n        }\r\n\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        });\r\n    };\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        return (\r\n            <Auxillary>\r\n                <Burger ingredients={this.state.ingredients}></Burger>\r\n                <BuildControls\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                />\r\n            </Auxillary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Layout>\r\n        <BurgerBuilder></BurgerBuilder>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}